<Window x:Class="CodeStack.Sw.MyToolbar.UI.Forms.CommandManagerForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:views="clr-namespace:CodeStack.Sw.MyToolbar.UI.Views"
        xmlns:vm="clr-namespace:CodeStack.Sw.MyToolbar.UI.ViewModels"
        xmlns:base="clr-namespace:CodeStack.Sw.MyToolbar.UI.Base"
        xmlns:conv="clr-namespace:CodeStack.Sw.MyToolbar.UI.Converters"
        mc:Ignorable="d"
        d:DataContext="{x:Type vm:CommandManagerVM}"
        d:DesignHeight="300" d:DesignWidth="300" WindowStartupLocation="CenterOwner" ShowInTaskbar="False"
		Title="MyToolbar Configuration" ResizeMode="NoResize" Icon="/CodeStack.Sw.MyToolbar;component/Resources/custom-toolbars-toolbar.png">
    <Window.Resources>
        <conv:CommandContextMenuTitleConverter x:Key="menuTitleConv" />
    </Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid Grid.Row="0" Margin="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock Grid.Column="0" Text="Toolbar Path:" Margin="2" />
			<TextBox Grid.Column="1" Text="{Binding Path=ToolbarSpecificationPath, UpdateSourceTrigger=PropertyChanged}" Margin="2" />
			<Button Grid.Column="2" Margin="2" Command="{Binding Path=BrowseToolbarSpecificationCommand}">
				<TextBlock Text="Browse..." />
			</Button>
		</Grid>
		<GroupBox Header="Toolbar" Grid.Row="1" IsEnabled="{Binding Path=IsEditable}">
			<GroupBox.Style>
				<Style TargetType="GroupBox">
					<Style.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.5" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</GroupBox.Style>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<views:CommandManagerView DataContext="{Binding}" Grid.Column="0" />
				<GridSplitter Grid.Column="1" Width="3"
                      HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="Gray" />
                <Grid Grid.Column="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                    <ContentPresenter Content="{Binding Path=SelectedElement}" Grid.Row="0">
                        <ContentPresenter.ContentTemplateSelector>
                            <base:CommandPropertiesDataTemplateSelector>
                                <base:CommandPropertiesDataTemplateSelector.CommandMacroTemplate>
                                    <DataTemplate>
                                        <views:CommandMacroView />
                                    </DataTemplate>
                                </base:CommandPropertiesDataTemplateSelector.CommandMacroTemplate>
                                <base:CommandPropertiesDataTemplateSelector.CommandGroupTemplate>
                                    <DataTemplate>
                                        <views:CommandBaseView />
                                    </DataTemplate>
                                </base:CommandPropertiesDataTemplateSelector.CommandGroupTemplate>
                                <base:CommandPropertiesDataTemplateSelector.DefaultTemplate>
                                    <DataTemplate>
                                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       Text="Select command or toolbar to change properties. Click + button to add new element"
                                       TextWrapping="Wrap" FontSize="15" />
                                    </DataTemplate>
                                </base:CommandPropertiesDataTemplateSelector.DefaultTemplate>
                            </base:CommandPropertiesDataTemplateSelector>
                        </ContentPresenter.ContentTemplateSelector>
                    </ContentPresenter>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right"
                                VerticalAlignment="Bottom">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Button}"
                                   x:Key="ToolbarButton"
                                   BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                <Setter Property="Width" Value="24"/>
                                <Setter Property="Height" Value="24"/>
                            </Style>
                        </StackPanel.Resources>
                        <Button Style="{StaticResource ToolbarButton}"
                                ToolTip="{Binding Path=SelectedElement, Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.MoveUp}}"
                                Command="{Binding Path=MoveCommandUpCommand}" CommandParameter="{Binding Path=SelectedElement}">
                            <Image Source="/CodeStack.Sw.MyToolbar;component/Resources/icon-move-right.png"/>
                        </Button>
                        <Button Style="{StaticResource ToolbarButton}"
                                ToolTip="{Binding Path=SelectedElement, Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.MoveDown}}"
                                Command="{Binding Path=MoveCommandDownCommand}" CommandParameter="{Binding Path=SelectedElement}">
                            <Image Source="/CodeStack.Sw.MyToolbar;component/Resources/icon-move-left.png"/>
                        </Button>
                        <Button Style="{StaticResource ToolbarButton}"
                                ToolTip="{Binding Path=SelectedElement, Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.InsertAfter}}"
                                Command="{Binding Path=InsertCommandAfterCommand}" CommandParameter="{Binding Path=SelectedElement}">
                            <Image Source="/CodeStack.Sw.MyToolbar;component/Resources/icon-add-after.png"/>
                        </Button>
                        <Button Style="{StaticResource ToolbarButton}"
                                ToolTip="{Binding Path=SelectedElement, Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.InsertBefore}}"
                                Command="{Binding Path=InsertCommandBeforeCommand}" CommandParameter="{Binding Path=SelectedElement}">
                            <Image Source="/CodeStack.Sw.MyToolbar;component/Resources/icon-add-before.png"/>
                        </Button>
                        <Button Style="{StaticResource ToolbarButton}"
                                ToolTip="{Binding Path=SelectedElement, Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.Remove}}"
                                Command="{Binding Path=CommandRemoveCommand}" CommandParameter="{Binding Path=SelectedElement}">
                            <Image Source="/CodeStack.Sw.MyToolbar;component/Resources/icon-remove.png"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
		</GroupBox>
		<Grid Grid.Row="2" HorizontalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Button Grid.Column="0" HorizontalAlignment="Right" Margin="2" Width="50" Click="OnOk">
				<TextBlock Text="OK" Margin="2" />
			</Button>
			<Button Grid.Column="1" HorizontalAlignment="Left" Margin="2" Width="50" Click="OnCancel">
				<TextBlock Text="Cancel" Margin="2" />
			</Button>
		</Grid>
	</Grid>
</Window>